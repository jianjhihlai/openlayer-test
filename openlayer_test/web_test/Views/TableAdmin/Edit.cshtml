@model Openlayer_test.TESTDB.Table1

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<div class="container">
        <div class="row">
            <div class="col-md-6 well">

@using (Html.BeginForm("Edit", "TableAdmin", FormMethod.Post, new { @role = "form", @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Edit for Table1 (@Model.Table1ID)</legend>

        @Html.HiddenFor(model => model.Table1ID)

        <div class="form-group">
            @Html.LabelFor(model => model.PlanYear, new { @class = "col-md-2 control-label" })
        
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PlanYear, new { @class = "form-control", placeholder = "PlanYear", AutoComplete = "On", tabindex = "1" })
                @Html.ValidationMessageFor(model => model.PlanYear)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SUBBASINNA, new { @class = "col-md-2 control-label" })
        
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SUBBASINNA, new { @class = "form-control", placeholder = "SUBBASINNA", AutoComplete = "On", tabindex = "2" })
                @Html.ValidationMessageFor(model => model.SUBBASINNA)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VillageID, "Village", new { @class = "col-md-2 control-label" })
        
            <div class="col-md-10">
                @Html.DropDownList("VillageID", String.Empty)
                @Html.ValidationMessageFor(model => model.VillageID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DisName, new { @class = "col-md-2 control-label" })
        
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DisName, new { @class = "form-control", placeholder = "DisName", AutoComplete = "On", tabindex = "4" })
                @Html.ValidationMessageFor(model => model.DisName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.X, new { @class = "col-md-2 control-label" })
        
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.X, new { @class = "form-control", placeholder = "X", AutoComplete = "On", tabindex = "5" })
                @Html.ValidationMessageFor(model => model.X)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Y, new { @class = "col-md-2 control-label" })
        
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Y, new { @class = "form-control", placeholder = "Y", AutoComplete = "On", tabindex = "6" })
                @Html.ValidationMessageFor(model => model.Y)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lon, new { @class = "col-md-2 control-label" })
        
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Lon, new { @class = "form-control", placeholder = "Lon", AutoComplete = "On", tabindex = "7" })
                @Html.ValidationMessageFor(model => model.Lon)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lat, new { @class = "col-md-2 control-label" })
        
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Lat, new { @class = "form-control", placeholder = "Lat", AutoComplete = "On", tabindex = "8" })
                @Html.ValidationMessageFor(model => model.Lat)
            </div>
        </div>

        <div class="col-md-12 text-right"><input type="submit" class="btn btn-primary" value="Save" /></div>
        
    </fieldset>
}
</div></div></div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
