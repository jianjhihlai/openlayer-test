//------------------------------------------------------------------------------
// <auto-generated>
//    這個程式碼是由範本產生。
//
//    對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//    如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 關聯性中繼資料

[assembly: EdmRelationshipAttribute("TESTDBModel", "FK_County_Town", "Basic_County", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Openlayer_test.TESTDB.EF.Basic_County), "Basic_Town", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Openlayer_test.TESTDB.EF.Basic_Town), true)]
[assembly: EdmRelationshipAttribute("TESTDBModel", "FK_Town_Village", "Basic_Town", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Openlayer_test.TESTDB.EF.Basic_Town), "Basic_Village", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Openlayer_test.TESTDB.EF.Basic_Village), true)]
[assembly: EdmRelationshipAttribute("TESTDBModel", "FK_Village_Table1", "Basic_Village", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Openlayer_test.TESTDB.EF.Basic_Village), "Table1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Openlayer_test.TESTDB.EF.Table1), true)]
[assembly: EdmRelationshipAttribute("TESTDBModel", "FK_Village_Table2", "Basic_Village", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Openlayer_test.TESTDB.EF.Basic_Village), "Table2", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Openlayer_test.TESTDB.EF.Table2), true)]

#endregion

namespace Openlayer_test.TESTDB.EF
{
    #region 內容
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    public partial class TESTDBEntities : ObjectContext
    {
        #region 建構函式
    
        /// <summary>
        /// 使用在應用程式組態檔的 'TESTDBEntities' 區段中找到的連接字串，初始化新的 TESTDBEntities 物件。
        /// </summary>
        public TESTDBEntities() : base("name=TESTDBEntities", "TESTDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 TESTDBEntities 物件。
        /// </summary>
        public TESTDBEntities(string connectionString) : base(connectionString, "TESTDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 TESTDBEntities 物件。
        /// </summary>
        public TESTDBEntities(EntityConnection connection) : base(connection, "TESTDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 部分方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<Basic_County> Basic_County
        {
            get
            {
                if ((_Basic_County == null))
                {
                    _Basic_County = base.CreateObjectSet<Basic_County>("Basic_County");
                }
                return _Basic_County;
            }
        }
        private ObjectSet<Basic_County> _Basic_County;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<Basic_Town> Basic_Town
        {
            get
            {
                if ((_Basic_Town == null))
                {
                    _Basic_Town = base.CreateObjectSet<Basic_Town>("Basic_Town");
                }
                return _Basic_Town;
            }
        }
        private ObjectSet<Basic_Town> _Basic_Town;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<Basic_Village> Basic_Village
        {
            get
            {
                if ((_Basic_Village == null))
                {
                    _Basic_Village = base.CreateObjectSet<Basic_Village>("Basic_Village");
                }
                return _Basic_Village;
            }
        }
        private ObjectSet<Basic_Village> _Basic_Village;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<Table1> Table1
        {
            get
            {
                if ((_Table1 == null))
                {
                    _Table1 = base.CreateObjectSet<Table1>("Table1");
                }
                return _Table1;
            }
        }
        private ObjectSet<Table1> _Table1;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<Table2> Table2
        {
            get
            {
                if ((_Table2 == null))
                {
                    _Table2 = base.CreateObjectSet<Table2>("Table2");
                }
                return _Table2;
            }
        }
        private ObjectSet<Table2> _Table2;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 將新物件加入 Basic_County EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToBasic_County(Basic_County basic_County)
        {
            base.AddObject("Basic_County", basic_County);
        }
    
        /// <summary>
        /// 將新物件加入 Basic_Town EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToBasic_Town(Basic_Town basic_Town)
        {
            base.AddObject("Basic_Town", basic_Town);
        }
    
        /// <summary>
        /// 將新物件加入 Basic_Village EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToBasic_Village(Basic_Village basic_Village)
        {
            base.AddObject("Basic_Village", basic_Village);
        }
    
        /// <summary>
        /// 將新物件加入 Table1 EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToTable1(Table1 table1)
        {
            base.AddObject("Table1", table1);
        }
    
        /// <summary>
        /// 將新物件加入 Table2 EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToTable2(Table2 table2)
        {
            base.AddObject("Table2", table2);
        }

        #endregion

    }

    #endregion

    #region 實體
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TESTDBModel", Name="Basic_County")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Basic_County : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 Basic_County 物件。
        /// </summary>
        /// <param name="countyID">CountyID 屬性的初始值。</param>
        /// <param name="countyName">CountyName 屬性的初始值。</param>
        public static Basic_County CreateBasic_County(global::System.Int32 countyID, global::System.String countyName)
        {
            Basic_County basic_County = new Basic_County();
            basic_County.CountyID = countyID;
            basic_County.CountyName = countyName;
            return basic_County;
        }

        #endregion

        #region 基本屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountyID
        {
            get
            {
                return _CountyID;
            }
            set
            {
                if (_CountyID != value)
                {
                    OnCountyIDChanging(value);
                    ReportPropertyChanging("CountyID");
                    _CountyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountyID");
                    OnCountyIDChanged();
                }
            }
        }
        private global::System.Int32 _CountyID;
        partial void OnCountyIDChanging(global::System.Int32 value);
        partial void OnCountyIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountyName
        {
            get
            {
                return _CountyName;
            }
            set
            {
                OnCountyNameChanging(value);
                ReportPropertyChanging("CountyName");
                _CountyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountyName");
                OnCountyNameChanged();
            }
        }
        private global::System.String _CountyName;
        partial void OnCountyNameChanging(global::System.String value);
        partial void OnCountyNameChanged();

        #endregion

    
        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TESTDBModel", "FK_County_Town", "Basic_Town")]
        public EntityCollection<Basic_Town> Basic_Town
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Basic_Town>("TESTDBModel.FK_County_Town", "Basic_Town");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Basic_Town>("TESTDBModel.FK_County_Town", "Basic_Town", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TESTDBModel", Name="Basic_Town")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Basic_Town : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 Basic_Town 物件。
        /// </summary>
        /// <param name="townID">TownID 屬性的初始值。</param>
        /// <param name="townName">TownName 屬性的初始值。</param>
        /// <param name="countyID">CountyID 屬性的初始值。</param>
        public static Basic_Town CreateBasic_Town(global::System.Int32 townID, global::System.String townName, global::System.Int32 countyID)
        {
            Basic_Town basic_Town = new Basic_Town();
            basic_Town.TownID = townID;
            basic_Town.TownName = townName;
            basic_Town.CountyID = countyID;
            return basic_Town;
        }

        #endregion

        #region 基本屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TownID
        {
            get
            {
                return _TownID;
            }
            set
            {
                if (_TownID != value)
                {
                    OnTownIDChanging(value);
                    ReportPropertyChanging("TownID");
                    _TownID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TownID");
                    OnTownIDChanged();
                }
            }
        }
        private global::System.Int32 _TownID;
        partial void OnTownIDChanging(global::System.Int32 value);
        partial void OnTownIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TownName
        {
            get
            {
                return _TownName;
            }
            set
            {
                OnTownNameChanging(value);
                ReportPropertyChanging("TownName");
                _TownName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TownName");
                OnTownNameChanged();
            }
        }
        private global::System.String _TownName;
        partial void OnTownNameChanging(global::System.String value);
        partial void OnTownNameChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountyID
        {
            get
            {
                return _CountyID;
            }
            set
            {
                OnCountyIDChanging(value);
                ReportPropertyChanging("CountyID");
                _CountyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountyID");
                OnCountyIDChanged();
            }
        }
        private global::System.Int32 _CountyID;
        partial void OnCountyIDChanging(global::System.Int32 value);
        partial void OnCountyIDChanged();

        #endregion

    
        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TESTDBModel", "FK_County_Town", "Basic_County")]
        public Basic_County Basic_County
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Basic_County>("TESTDBModel.FK_County_Town", "Basic_County").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Basic_County>("TESTDBModel.FK_County_Town", "Basic_County").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Basic_County> Basic_CountyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Basic_County>("TESTDBModel.FK_County_Town", "Basic_County");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Basic_County>("TESTDBModel.FK_County_Town", "Basic_County", value);
                }
            }
        }
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TESTDBModel", "FK_Town_Village", "Basic_Village")]
        public EntityCollection<Basic_Village> Basic_Village
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Basic_Village>("TESTDBModel.FK_Town_Village", "Basic_Village");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Basic_Village>("TESTDBModel.FK_Town_Village", "Basic_Village", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TESTDBModel", Name="Basic_Village")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Basic_Village : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 Basic_Village 物件。
        /// </summary>
        /// <param name="villageID">VillageID 屬性的初始值。</param>
        /// <param name="villageName">VillageName 屬性的初始值。</param>
        /// <param name="townID">TownID 屬性的初始值。</param>
        public static Basic_Village CreateBasic_Village(global::System.Int32 villageID, global::System.String villageName, global::System.Int32 townID)
        {
            Basic_Village basic_Village = new Basic_Village();
            basic_Village.VillageID = villageID;
            basic_Village.VillageName = villageName;
            basic_Village.TownID = townID;
            return basic_Village;
        }

        #endregion

        #region 基本屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VillageID
        {
            get
            {
                return _VillageID;
            }
            set
            {
                if (_VillageID != value)
                {
                    OnVillageIDChanging(value);
                    ReportPropertyChanging("VillageID");
                    _VillageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VillageID");
                    OnVillageIDChanged();
                }
            }
        }
        private global::System.Int32 _VillageID;
        partial void OnVillageIDChanging(global::System.Int32 value);
        partial void OnVillageIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VillageName
        {
            get
            {
                return _VillageName;
            }
            set
            {
                OnVillageNameChanging(value);
                ReportPropertyChanging("VillageName");
                _VillageName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VillageName");
                OnVillageNameChanged();
            }
        }
        private global::System.String _VillageName;
        partial void OnVillageNameChanging(global::System.String value);
        partial void OnVillageNameChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TownID
        {
            get
            {
                return _TownID;
            }
            set
            {
                OnTownIDChanging(value);
                ReportPropertyChanging("TownID");
                _TownID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TownID");
                OnTownIDChanged();
            }
        }
        private global::System.Int32 _TownID;
        partial void OnTownIDChanging(global::System.Int32 value);
        partial void OnTownIDChanged();

        #endregion

    
        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TESTDBModel", "FK_Town_Village", "Basic_Town")]
        public Basic_Town Basic_Town
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Basic_Town>("TESTDBModel.FK_Town_Village", "Basic_Town").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Basic_Town>("TESTDBModel.FK_Town_Village", "Basic_Town").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Basic_Town> Basic_TownReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Basic_Town>("TESTDBModel.FK_Town_Village", "Basic_Town");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Basic_Town>("TESTDBModel.FK_Town_Village", "Basic_Town", value);
                }
            }
        }
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TESTDBModel", "FK_Village_Table1", "Table1")]
        public EntityCollection<Table1> Table1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Table1>("TESTDBModel.FK_Village_Table1", "Table1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Table1>("TESTDBModel.FK_Village_Table1", "Table1", value);
                }
            }
        }
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TESTDBModel", "FK_Village_Table2", "Table2")]
        public EntityCollection<Table2> Table2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Table2>("TESTDBModel.FK_Village_Table2", "Table2");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Table2>("TESTDBModel.FK_Village_Table2", "Table2", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TESTDBModel", Name="Table1")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Table1 : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 Table1 物件。
        /// </summary>
        /// <param name="table1ID">Table1ID 屬性的初始值。</param>
        /// <param name="planYear">PlanYear 屬性的初始值。</param>
        /// <param name="sUBBASINNA">SUBBASINNA 屬性的初始值。</param>
        /// <param name="villageID">VillageID 屬性的初始值。</param>
        /// <param name="disName">DisName 屬性的初始值。</param>
        /// <param name="x">X 屬性的初始值。</param>
        /// <param name="y">Y 屬性的初始值。</param>
        /// <param name="lon">Lon 屬性的初始值。</param>
        /// <param name="lat">Lat 屬性的初始值。</param>
        public static Table1 CreateTable1(global::System.Int32 table1ID, global::System.Int32 planYear, global::System.String sUBBASINNA, global::System.Int32 villageID, global::System.String disName, global::System.Double x, global::System.Double y, global::System.Double lon, global::System.Double lat)
        {
            Table1 table1 = new Table1();
            table1.Table1ID = table1ID;
            table1.PlanYear = planYear;
            table1.SUBBASINNA = sUBBASINNA;
            table1.VillageID = villageID;
            table1.DisName = disName;
            table1.X = x;
            table1.Y = y;
            table1.Lon = lon;
            table1.Lat = lat;
            return table1;
        }

        #endregion

        #region 基本屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Table1ID
        {
            get
            {
                return _Table1ID;
            }
            set
            {
                if (_Table1ID != value)
                {
                    OnTable1IDChanging(value);
                    ReportPropertyChanging("Table1ID");
                    _Table1ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Table1ID");
                    OnTable1IDChanged();
                }
            }
        }
        private global::System.Int32 _Table1ID;
        partial void OnTable1IDChanging(global::System.Int32 value);
        partial void OnTable1IDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlanYear
        {
            get
            {
                return _PlanYear;
            }
            set
            {
                OnPlanYearChanging(value);
                ReportPropertyChanging("PlanYear");
                _PlanYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlanYear");
                OnPlanYearChanged();
            }
        }
        private global::System.Int32 _PlanYear;
        partial void OnPlanYearChanging(global::System.Int32 value);
        partial void OnPlanYearChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SUBBASINNA
        {
            get
            {
                return _SUBBASINNA;
            }
            set
            {
                OnSUBBASINNAChanging(value);
                ReportPropertyChanging("SUBBASINNA");
                _SUBBASINNA = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SUBBASINNA");
                OnSUBBASINNAChanged();
            }
        }
        private global::System.String _SUBBASINNA;
        partial void OnSUBBASINNAChanging(global::System.String value);
        partial void OnSUBBASINNAChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VillageID
        {
            get
            {
                return _VillageID;
            }
            set
            {
                OnVillageIDChanging(value);
                ReportPropertyChanging("VillageID");
                _VillageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VillageID");
                OnVillageIDChanged();
            }
        }
        private global::System.Int32 _VillageID;
        partial void OnVillageIDChanging(global::System.Int32 value);
        partial void OnVillageIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisName
        {
            get
            {
                return _DisName;
            }
            set
            {
                OnDisNameChanging(value);
                ReportPropertyChanging("DisName");
                _DisName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisName");
                OnDisNameChanged();
            }
        }
        private global::System.String _DisName;
        partial void OnDisNameChanging(global::System.String value);
        partial void OnDisNameChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double X
        {
            get
            {
                return _X;
            }
            set
            {
                OnXChanging(value);
                ReportPropertyChanging("X");
                _X = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("X");
                OnXChanged();
            }
        }
        private global::System.Double _X;
        partial void OnXChanging(global::System.Double value);
        partial void OnXChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Y
        {
            get
            {
                return _Y;
            }
            set
            {
                OnYChanging(value);
                ReportPropertyChanging("Y");
                _Y = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Y");
                OnYChanged();
            }
        }
        private global::System.Double _Y;
        partial void OnYChanging(global::System.Double value);
        partial void OnYChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Lon
        {
            get
            {
                return _Lon;
            }
            set
            {
                OnLonChanging(value);
                ReportPropertyChanging("Lon");
                _Lon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lon");
                OnLonChanged();
            }
        }
        private global::System.Double _Lon;
        partial void OnLonChanging(global::System.Double value);
        partial void OnLonChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Lat
        {
            get
            {
                return _Lat;
            }
            set
            {
                OnLatChanging(value);
                ReportPropertyChanging("Lat");
                _Lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lat");
                OnLatChanged();
            }
        }
        private global::System.Double _Lat;
        partial void OnLatChanging(global::System.Double value);
        partial void OnLatChanged();

        #endregion

    
        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TESTDBModel", "FK_Village_Table1", "Basic_Village")]
        public Basic_Village Basic_Village
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Basic_Village>("TESTDBModel.FK_Village_Table1", "Basic_Village").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Basic_Village>("TESTDBModel.FK_Village_Table1", "Basic_Village").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Basic_Village> Basic_VillageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Basic_Village>("TESTDBModel.FK_Village_Table1", "Basic_Village");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Basic_Village>("TESTDBModel.FK_Village_Table1", "Basic_Village", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TESTDBModel", Name="Table2")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Table2 : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 Table2 物件。
        /// </summary>
        /// <param name="table2ID">Table2ID 屬性的初始值。</param>
        /// <param name="lon">Lon 屬性的初始值。</param>
        /// <param name="lat">Lat 屬性的初始值。</param>
        /// <param name="leftGeo">LeftGeo 屬性的初始值。</param>
        /// <param name="rightGeo">RightGeo 屬性的初始值。</param>
        /// <param name="topGeo">TopGeo 屬性的初始值。</param>
        /// <param name="bottomGeo">BottomGeo 屬性的初始值。</param>
        /// <param name="resolution">Resolution 屬性的初始值。</param>
        /// <param name="year">Year 屬性的初始值。</param>
        /// <param name="month">Month 屬性的初始值。</param>
        /// <param name="day">Day 屬性的初始值。</param>
        /// <param name="disName">DisName 屬性的初始值。</param>
        /// <param name="villageID">VillageID 屬性的初始值。</param>
        /// <param name="basin">Basin 屬性的初始值。</param>
        /// <param name="subbasinna">Subbasinna 屬性的初始值。</param>
        public static Table2 CreateTable2(global::System.Int32 table2ID, global::System.Double lon, global::System.Double lat, global::System.Double leftGeo, global::System.Double rightGeo, global::System.Double topGeo, global::System.Double bottomGeo, global::System.Double resolution, global::System.Int32 year, global::System.Int32 month, global::System.Int32 day, global::System.String disName, global::System.Int32 villageID, global::System.String basin, global::System.String subbasinna)
        {
            Table2 table2 = new Table2();
            table2.Table2ID = table2ID;
            table2.Lon = lon;
            table2.Lat = lat;
            table2.LeftGeo = leftGeo;
            table2.RightGeo = rightGeo;
            table2.TopGeo = topGeo;
            table2.BottomGeo = bottomGeo;
            table2.Resolution = resolution;
            table2.Year = year;
            table2.Month = month;
            table2.Day = day;
            table2.DisName = disName;
            table2.VillageID = villageID;
            table2.Basin = basin;
            table2.Subbasinna = subbasinna;
            return table2;
        }

        #endregion

        #region 基本屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Table2ID
        {
            get
            {
                return _Table2ID;
            }
            set
            {
                if (_Table2ID != value)
                {
                    OnTable2IDChanging(value);
                    ReportPropertyChanging("Table2ID");
                    _Table2ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Table2ID");
                    OnTable2IDChanged();
                }
            }
        }
        private global::System.Int32 _Table2ID;
        partial void OnTable2IDChanging(global::System.Int32 value);
        partial void OnTable2IDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RawFile
        {
            get
            {
                return _RawFile;
            }
            set
            {
                OnRawFileChanging(value);
                ReportPropertyChanging("RawFile");
                _RawFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RawFile");
                OnRawFileChanged();
            }
        }
        private global::System.String _RawFile;
        partial void OnRawFileChanging(global::System.String value);
        partial void OnRawFileChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EnviFile
        {
            get
            {
                return _EnviFile;
            }
            set
            {
                OnEnviFileChanging(value);
                ReportPropertyChanging("EnviFile");
                _EnviFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EnviFile");
                OnEnviFileChanged();
            }
        }
        private global::System.String _EnviFile;
        partial void OnEnviFileChanging(global::System.String value);
        partial void OnEnviFileChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TileFile
        {
            get
            {
                return _TileFile;
            }
            set
            {
                OnTileFileChanging(value);
                ReportPropertyChanging("TileFile");
                _TileFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TileFile");
                OnTileFileChanged();
            }
        }
        private global::System.String _TileFile;
        partial void OnTileFileChanging(global::System.String value);
        partial void OnTileFileChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Lon
        {
            get
            {
                return _Lon;
            }
            set
            {
                OnLonChanging(value);
                ReportPropertyChanging("Lon");
                _Lon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lon");
                OnLonChanged();
            }
        }
        private global::System.Double _Lon;
        partial void OnLonChanging(global::System.Double value);
        partial void OnLonChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Lat
        {
            get
            {
                return _Lat;
            }
            set
            {
                OnLatChanging(value);
                ReportPropertyChanging("Lat");
                _Lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lat");
                OnLatChanged();
            }
        }
        private global::System.Double _Lat;
        partial void OnLatChanging(global::System.Double value);
        partial void OnLatChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LeftGeo
        {
            get
            {
                return _LeftGeo;
            }
            set
            {
                OnLeftGeoChanging(value);
                ReportPropertyChanging("LeftGeo");
                _LeftGeo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeftGeo");
                OnLeftGeoChanged();
            }
        }
        private global::System.Double _LeftGeo;
        partial void OnLeftGeoChanging(global::System.Double value);
        partial void OnLeftGeoChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RightGeo
        {
            get
            {
                return _RightGeo;
            }
            set
            {
                OnRightGeoChanging(value);
                ReportPropertyChanging("RightGeo");
                _RightGeo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RightGeo");
                OnRightGeoChanged();
            }
        }
        private global::System.Double _RightGeo;
        partial void OnRightGeoChanging(global::System.Double value);
        partial void OnRightGeoChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TopGeo
        {
            get
            {
                return _TopGeo;
            }
            set
            {
                OnTopGeoChanging(value);
                ReportPropertyChanging("TopGeo");
                _TopGeo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TopGeo");
                OnTopGeoChanged();
            }
        }
        private global::System.Double _TopGeo;
        partial void OnTopGeoChanging(global::System.Double value);
        partial void OnTopGeoChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BottomGeo
        {
            get
            {
                return _BottomGeo;
            }
            set
            {
                OnBottomGeoChanging(value);
                ReportPropertyChanging("BottomGeo");
                _BottomGeo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BottomGeo");
                OnBottomGeoChanged();
            }
        }
        private global::System.Double _BottomGeo;
        partial void OnBottomGeoChanging(global::System.Double value);
        partial void OnBottomGeoChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Resolution
        {
            get
            {
                return _Resolution;
            }
            set
            {
                OnResolutionChanging(value);
                ReportPropertyChanging("Resolution");
                _Resolution = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Resolution");
                OnResolutionChanged();
            }
        }
        private global::System.Double _Resolution;
        partial void OnResolutionChanging(global::System.Double value);
        partial void OnResolutionChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.Int32 _Month;
        partial void OnMonthChanging(global::System.Int32 value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Day
        {
            get
            {
                return _Day;
            }
            set
            {
                OnDayChanging(value);
                ReportPropertyChanging("Day");
                _Day = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Day");
                OnDayChanged();
            }
        }
        private global::System.Int32 _Day;
        partial void OnDayChanging(global::System.Int32 value);
        partial void OnDayChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisName
        {
            get
            {
                return _DisName;
            }
            set
            {
                OnDisNameChanging(value);
                ReportPropertyChanging("DisName");
                _DisName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisName");
                OnDisNameChanged();
            }
        }
        private global::System.String _DisName;
        partial void OnDisNameChanging(global::System.String value);
        partial void OnDisNameChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VillageID
        {
            get
            {
                return _VillageID;
            }
            set
            {
                OnVillageIDChanging(value);
                ReportPropertyChanging("VillageID");
                _VillageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VillageID");
                OnVillageIDChanged();
            }
        }
        private global::System.Int32 _VillageID;
        partial void OnVillageIDChanging(global::System.Int32 value);
        partial void OnVillageIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Basin
        {
            get
            {
                return _Basin;
            }
            set
            {
                OnBasinChanging(value);
                ReportPropertyChanging("Basin");
                _Basin = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Basin");
                OnBasinChanged();
            }
        }
        private global::System.String _Basin;
        partial void OnBasinChanging(global::System.String value);
        partial void OnBasinChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subbasinna
        {
            get
            {
                return _Subbasinna;
            }
            set
            {
                OnSubbasinnaChanging(value);
                ReportPropertyChanging("Subbasinna");
                _Subbasinna = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subbasinna");
                OnSubbasinnaChanged();
            }
        }
        private global::System.String _Subbasinna;
        partial void OnSubbasinnaChanging(global::System.String value);
        partial void OnSubbasinnaChanged();

        #endregion

    
        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TESTDBModel", "FK_Village_Table2", "Basic_Village")]
        public Basic_Village Basic_Village
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Basic_Village>("TESTDBModel.FK_Village_Table2", "Basic_Village").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Basic_Village>("TESTDBModel.FK_Village_Table2", "Basic_Village").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Basic_Village> Basic_VillageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Basic_Village>("TESTDBModel.FK_Village_Table2", "Basic_Village");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Basic_Village>("TESTDBModel.FK_Village_Table2", "Basic_Village", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
